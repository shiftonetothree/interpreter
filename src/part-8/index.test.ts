import {part8} from ".";

test("7 * 4 / 2", () => {
    expect(part8("7 * 4 / 2")).toBe(14);
});

test("7 * 4 / 2 * 3", () => {
    expect(part8("7 * 4 / 2 * 3")).toBe(42);
});

test("10 * 4  * 2 * 3 / 8", () => {
    expect(part8("10 * 4  * 2 * 3 / 8")).toBe(30);
});

test("3", () => {
    expect(part8("3")).toBe(3);
});

test("2 + 7 * 4", () => {
    expect(part8("2 + 7 * 4")).toBe(30);
});

test("7 - 8 / 4", () => {
    expect(part8("7 - 8 / 4")).toBe(5);
});

test("14 + 2 * 3 - 6 / 2", () => {
    expect(part8("14 + 2 * 3 - 6 / 2")).toBe(17);
});

test("7 + 3 * (10 / (12 / (3 + 1) - 1))", () => {
    expect(part8("7 + 3 * (10 / (12 / (3 + 1) - 1))")).toBe(22);
});

test("7 + 3 * (10 / (12 / (3 + 1) - 1)) / (2 + 3) - 5 - 3 + (8)", () => {
    expect(part8("7 + 3 * (10 / (12 / (3 + 1) - 1)) / (2 + 3) - 5 - 3 + (8)")).toBe(10);
});

test("7 + (((3 + 2)))", () => {
    expect(part8("7 + (((3 + 2)))")).toBe(12);
});

test("- 3", () => {
    expect(part8("- 3")).toBe(-3);
});

test("+ 3", () => {
    expect(part8("+ 3")).toBe(3);
});

test("5 - - - + - 3", () => {
    expect(part8("5 - - - + - 3")).toBe(8);
});

test("5 - - - + - (3 + 4) - +2", () => {
    expect(part8("5 - - - + - (3 + 4) - +2")).toBe(10);
});
